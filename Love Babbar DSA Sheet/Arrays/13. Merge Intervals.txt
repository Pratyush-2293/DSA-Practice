public int[][] overlappedInterval(int[][] intervals)
    {
        // Code here // Code here
        Arrays.sort(intervals, (a,b)->Integer.compare(a[0],b[0]));
        Stack<int[]> st = new Stack<>();
        st.add(intervals[0]);

        for(int i=1;i< intervals.length;i++){
            int start2 = intervals[i][0];
            int end2 = intervals[i][1];

            int[] prevInterval = st.pop();

            int start1 = prevInterval[0];
            int end1 = prevInterval[1];

            if(end1>=start2){
                int merged[] = {start1, Math.max(end1,end2)};
                st.add(merged);
            } else{
                st.add(prevInterval);
                st.add(intervals[i]);
            }
        }

        int[][] output = new int[st.size()][2];

        for(int i=output.length-1;i>=0;i--){
            int[] popped = st.pop();
            output[i][0] = popped[0];
            output[i][1] = popped[1];
        }

        return output;
    }